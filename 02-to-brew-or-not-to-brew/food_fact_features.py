features = [
    # general information:
    ('code', False, """barcode of the product (can be EAN-13 or internal codes for some food stores), 
    for products without a barcode, Open Food Facts assigns a number starting with the 200 reserved prefix"""),
    ('url', False, 'url of the product page on Open Food Facts'),
    ('creator', False, 'contributor who first added the product'),
    ('created_t', False, 'date that the product was added (UNIX timestamp format)'),
    ('created_datetime', False, 'date that the product was added (iso8601 format: yyyy-mm-ddThh:mn:ssZ)'),
    ('last_modified_t', False, 'date that the product page was last modified'),
    ('last_modified_datetime', False, ''),
    ('product_name', True, 'name of the product'),
    ('generic_name', True, ''),
    ('quantity', False, 'quantity and unit'),
    # tags:
    ('packaging', False, 'shape, material'),
    ('packaging_tags', False, ''),
    ('brands', False, ''),
    ('brands_tags', True, ''),
    ('categories', False, ''),
    ('categories_tags', True, ''),
    ('categories_en', False, ''),
    ('origins', False, 'origins of ingredients'),
    ('origins_tags', True, ''),
    ('manufacturing_places', False, 'places where manufactured or transformed'),
    ('manufacturing_places_tags', True, ''),
    ('labels', False, 'some text found on the package'),
    ('labels_tags', False, ''),
    ('labels_en', False, ''),
    ('emb_codes', False, ''),
    ('emb_codes_tags', False, ''),
    ('first_packaging_code_geo', False, 'coordinates corresponding to the first packaging code indicated'),
    ('cities', False, ''),
    ('cities_tags', False, ''),
    ('purchase_places', False, ''),
    ('stores', False, ''),
    ('countries', False, 'list of countries where the product is sold'),
    ('countries_tags', True, ''),
    ('countries_en', False, ''),
    # ingredients:
    ('ingredients_text', False, ''),
    ('allergens', False, 'weird - in French'),
    ('allergens_en', False, 'weird - looks like URLs to products'),
    ('traces', False, ''),
    ('traces_tags', False, ''),
    ('traces_en', False, ''),
    # misc. data:
    ('serving_size', False, 'serving size in g'),
    ('no_nutriments', False, 'indicates if the nutrition facts are indicated on the food label, weird - all nans'),
    ('additives_n', False, 'number of food additives'),
    ('additives', False, ''),
    ('additives_tags', False, ''),
    ('additives_en', False, ''),
    ('ingredients_from_palm_oil_n', False, ''),
    ('ingredients_from_palm_oil', False, ''),
    ('ingredients_from_palm_oil_tags', False, ''),
    ('ingredients_that_may_be_from_palm_oil_n', False, ''),
    ('ingredients_that_may_be_from_palm_oil', False, ''),
    ('ingredients_that_may_be_from_palm_oil_tags', False, ''),
    ('nutrition_grade_uk', False, 'nutrition grade (\'a\' to \'e\')'),
    ('nutrition_grade_fr', False, 'nutrition grade (\'a\' to \'e\'). see http://fr.openfoodfacts.org/score-nutritionnel-experimental-france'),
    ('pnns_groups_1', False, ''),
    ('pnns_groups_2', False, ''),
    ('states', False, ''),
    ('states_tags', False, ''),
    ('states_en', False, ''),
    ('main_category', False, ''),
    ('main_category_fr', False, ''),
    ('image_url', False, ''),
    ('image_small_url', False, ''),
    # nutrition facts:
    ('energy_100g', True, ''),
    ('energy-from-fat_100g', True, ''),
    ('fat_100g', True, ''),
    ('saturated-fat_100g', True, ''),
    ('-butyric-acid_100g', True, ''),
    ('-caproic-acid_100g', True, ''),
    ('-caprylic-acid_100g', True, ''),
    ('-capric-acid_100g', True, ''),
    ('-lauric-acid_100g', True, ''),
    ('-myristic-acid_100g', True, ''),
    ('-palmitic-acid_100g', True, ''),
    ('-stearic-acid_100g', True, ''),
    ('-arachidic-acid_100g', True, ''),
    ('-behenic-acid_100g', True, ''),
    ('-lignoceric-acid_100g', True, ''),
    ('-cerotic-acid_100g', True, ''),
    ('-montanic-acid_100g', True, ''),
    ('-melissic-acid_100g', True, ''),
    ('monounsaturated-fat_100g', True, ''),
    ('polyunsaturated-fat_100g', True, ''),
    ('omega-3-fat_100g', True, ''),
    ('-alpha-linolenic-acid_100g', True, ''),
    ('-eicosapentaenoic-acid_100g', True, ''),
    ('-docosahexaenoic-acid_100g', True, ''),
    ('omega-6-fat_100g', True, ''),
    ('-linoleic-acid_100g', True, ''),
    ('-arachidonic-acid_100g', True, ''),
    ('-gamma-linolenic-acid_100g', True, ''),
    ('-dihomo-gamma-linolenic-acid_100g', True, ''),
    ('omega-9-fat_100g', True, ''),
    ('-oleic-acid_100g', True, ''),
    ('-elaidic-acid_100g', True, ''),
    ('-gondoic-acid_100g', True, ''),
    ('-mead-acid_100g', True, ''),
    ('-erucic-acid_100g', True, ''),
    ('-nervonic-acid_100g', True, ''),
    ('trans-fat_100g', True, ''),
    ('cholesterol_100g', True, ''),
    ('carbohydrates_100g', True, ''),
    ('sugars_100g', True, ''),
    ('-sucrose_100g', True, ''),
    ('-glucose_100g', True, ''),
    ('-fructose_100g', True, ''),
    ('-lactose_100g', True, ''),
    ('-maltose_100g', True, ''),
    ('-maltodextrins_100g', True, ''),
    ('starch_100g', True, ''),
    ('polyols_100g', True, ''),
    ('fiber_100g', True, ''),
    ('proteins_100g', True, ''),
    ('casein_100g', True, ''),
    ('serum-proteins_100g', True, ''),
    ('nucleotides_100g', True, ''),
    ('salt_100g', True, ''),
    ('sodium_100g', True, ''),
    ('alcohol_100g', True, ''),
    ('vitamin-a_100g', True, ''),
    ('beta-carotene_100g', True, ''),
    ('vitamin-d_100g', True, ''),
    ('vitamin-e_100g', True, ''),
    ('vitamin-k_100g', True, ''),
    ('vitamin-c_100g', True, ''),
    ('vitamin-b1_100g', True, ''),
    ('vitamin-b2_100g', True, ''),
    ('vitamin-pp_100g', True, ''),
    ('vitamin-b6_100g', True, ''),
    ('vitamin-b9_100g', True, ''),
    ('folates_100g', True, ''),
    ('vitamin-b12_100g', True, ''),
    ('biotin_100g', True, ''),
    ('pantothenic-acid_100g', True, ''),
    ('silica_100g', True, ''),
    ('bicarbonate_100g', True, ''),
    ('potassium_100g', True, ''),
    ('chloride_100g', True, ''),
    ('calcium_100g', True, ''),
    ('phosphorus_100g', True, ''),
    ('iron_100g', True, ''),
    ('magnesium_100g', True, ''),
    ('zinc_100g', True, ''),
    ('copper_100g', True, ''),
    ('manganese_100g', True, ''),
    ('fluoride_100g', True, ''),
    ('selenium_100g', True, ''),
    ('chromium_100g', True, ''),
    ('molybdenum_100g', True, ''),
    ('iodine_100g', True, ''),
    ('caffeine_100g', True, ''),
    ('taurine_100g', True, ''),
    ('ph_100g', True, ''),
    ('fruits-vegetables-nuts_100g', True, ''),
    ('fruits-vegetables-nuts-estimate_100g', True, ''),
    ('collagen-meat-protein-ratio_100g', True, ''),
    ('cocoa_100g', True, ''),
    ('chlorophyl_100g', True, ''),
    ('carbon-footprint_100g', True, 'carbon footprint (indicated on some products)'),
    ('nutrition-score-fr_100g', True, """experimental nutrition score derived from the UK FSA score and adapted for 
    the French market (formula defined by the team of Professor Hercberg)"""),
    ('nutrition-score-uk_100g', True, 'nutrition score defined by the UK Food Standards Administration (FSA)'),
    ('glycemic-index_100g', True, ''),
    ('water-hardness_100g', True, '')
]

def get_columns_to_read():
    """
    Returns a list of all column indexes that we consider interesting in the food facts beer subset.
    """
    return [index for index, feature in enumerate(features) if feature[1]]